version: '3'

services:
    minecraft_1:
        build: ./Dockerfile
        container_name: ${PROJECT_NAME}_Minecraft_1
        expose:
            - 25566
            - 25562
            - 8123
        networks:
            minecraft_network:
                ipv4_address: ${MINECRAFT_1_IP}
        tty: true
        stdin_open: true
        restart: always
        volumes:
            - ./worlds/world:/world/
            - ./worlds/world_nether:/world_nether/
            - ./worlds/world_the_end:/world_the_end/
   
    minecraft_2:
        build: ./Dockerfile
        container_name: ${PROJECT_NAME}_Minecraft_2
        expose:
            - 25566
            - 25562
            - 8123
        networks:
            minecraft_network:
                ipv4_address: ${MINECRAFT_2_IP}
        tty: true
        stdin_open: true
        restart: always
        volumes:
            - ./worlds/world:/world/
            - ./worlds/world_nether:/world_nether/
            - ./worlds/world_the_end:/world_the_end/

    haproxy:
        build: ./haproxy
        container_name: ${PROJECT_NAME}_HAProxy
        env_file:
            - .env
        links:
            - minecraft_1
            - minecraft_2
            - dockercraft
            - rcon
        ports:
            - 36543:36543
            - 36544:36544
            - 8080:8080
            - 8123:8123
        networks:
            minecraft_network:
                ipv4_address: ${HAPROXY_IP}
        tty: true 
        stdin_open: true
        depends_on:
            - minecraft_1
            - minecraft_2
        restart: unless-stopped

    rcon:
        build: ./rcon
        container_name: ${PROJECT_NAME}_Rcon
        env_file:
            - .env
        links:
            - minecraft_1
            - minecraft_2
        expose:
            - 80
        networks:
            minecraft_network:
                ipv4_address: ${RCON_IP}
        tty: true
        stdin_open: true
        depends_on:
            - minecraft_1
            - minecraft_2
        restart: always

    dockercraft:
        build: ./dockercraft
        expose:
            - 25565
        container_name: ${PROJECT_NAME}_Dockercraft
        networks:
            minecraft_network:
                ipv4_address: ${DOCKERCRAFT_IP}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        tty: true

    backup:
        image: futurice/docker-volume-backup:2.0.0
        container_name: ${PROJECT_NAME}_Backup
        environment:
            AWS_S3_BUCKET_NAME: docker-minecraft-backup
            AWS_DEFAULT_REGION: eu-west-3
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
            BACKUP_CRON_EXPRESSION: "0 30 12 ? * * *"
        volumes:
            - ./worlds:/backup/worlds:ro

networks:
    minecraft_network:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: ${NETWORK_SUBNET}
